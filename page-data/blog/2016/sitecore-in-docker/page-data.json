{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2016/sitecore-in-docker/","result":{"data":{"site":{"siteMetadata":{"title":"Roman Klimenko"}},"markdownRemark":{"id":"f99f5a3b-5594-562f-86f4-5ccc5c6a722d","excerpt":"Warning: this post is obsolete. Please read this one instead: http://blog.martinmiles.net/post/starting-with-docker-and-sitecore Motivation Docker containers…","html":"<p><em>Warning: this post is obsolete. Please read this one instead: <a href=\"http://blog.martinmiles.net/post/starting-with-docker-and-sitecore\">http://blog.martinmiles.net/post/starting-with-docker-and-sitecore</a></em></p>\n<img src=\"docker.png\" class=\"img-fluid\" />\n<h2>Motivation</h2>\n<blockquote>\n<p>Docker containers wrap a piece of software in a complete filesystem that contains everything needed to run: code, runtime, system tools, system libraries — anything that can be installed on a server. This guarantees that the software will always run the same, regardless of its environment.</p>\n<p>— <a href=\"https://www.docker.com/what-docker\">https://www.docker.com/what-docker</a></p>\n</blockquote>\n<p>I was looking forward to Docker support of Windows containers for a long time. Docker <a href=\"https://www.docker.com/microsoft\">supports</a> Windows containers nowadays and it means we are able to put our Windows applications in containers in order to save a lot of time spent on setting up development, testing, and deployment.</p>\n<p>These days Microsoft gives a lot of <code class=\"language-text\">Dockerfile</code> examples so setting up a container for ASP.NET web application is not a pain but a pleasure.</p>\n<p>In this article, I am going to show how to perform a very basic setup for <a href=\"https://www.sitecore.net/en/products/sitecore-experience-platform\">Sitecore Experience Platform 8.2</a>.</p>\n<p>To set it up, I mixed the following <code class=\"language-text\">Dockerfile</code>s:</p>\n<ul>\n<li><a href=\"https://hub.docker.com/r/microsoft/windowsservercore/\">microsoft/windowsservercore</a> — Windows Server 2016 Server Core base OS image for Windows containers.</li>\n<li><a href=\"https://hub.docker.com/r/microsoft/mssql-server-2016-express-windows/\">microsoft/mssql-server-2016-express-windows</a> — Microsoft SQL Server 2016 Express.</li>\n<li><a href=\"https://hub.docker.com/r/microsoft/iis/\">microsoft/iis</a> — Internet Information Services (IIS).</li>\n</ul>\n<h2>Setup</h2>\n<p>There are many options how to install Sitecore Experience Platform. For the very basic demo setup, we will need the following:</p>\n<ul>\n<li><a href=\"https://dev.sitecore.net/Downloads/Sitecore_Experience_Platform/82/Sitecore_Experience_Platform_82_Initial_Release.aspx#\">ZIP archive</a> of the Sitecore site root folder.</li>\n<li>A Sitecore license (I hope you have got one).</li>\n<li>Microsoft SQL Server installer. You can get it from <a href=\"https://go.microsoft.com/fwlink/?linkid=829176\">here</a> (Microsoft SQL Express 2016).</li>\n<li>You’ll need to run Windows 10 or Windows Server 2016 on your PC or laptop.</li>\n</ul>\n<p>Once you have all these, we can go further.</p>\n<h2>Docker setup</h2>\n<p>Follow <a href=\"https://msdn.microsoft.com/virtualization/windowscontainers/quick_start/quick_start_windows_10\">this</a> article to setup Docker on Windows. If you already have Docker installed, please, verify the version of dockerd service. I have spent some time trying to figure out that the version of the dockerd service on my machine is not the same as I just installed. Quick check – you should be able to pull Windows containers like that:</p>\n<p><code class=\"language-text\">docker pull microsoft/windowsservercore</code></p>\n<p>And here are the first step to start building a Sitecore container:</p>\n<ul>\n<li>Create a folder for our container (i.e. <code class=\"language-text\">C:\\docker</code>).</li>\n<li>Create a <code class=\"language-text\">Dockerfile</code> in the folder we just created.</li>\n<li>Start our <code class=\"language-text\">Dockerfile</code> by specifying the Base Image for our container:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> microsoft/windowsservercore</code></pre></div>\n<h2>Files</h2>\n<p>I put Sitecore files just in the same way as for local quick setup. The structure is like that:</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\">docker\nsitecore\nDatabases\n<span class=\"token punctuation\">...</span>\nWebsite\n<span class=\"token punctuation\">...</span>\nData\nlicense.xml\n<span class=\"token punctuation\">...</span></code></pre></div>\n<p>I will not dive deep into Sitecore configuration. You just need to place files as you usually do when you setup your Sitecore instances. Remember about <code class=\"language-text\">ConnectionStrings.config</code> and a path to <code class=\"language-text\">license.xml</code>. Don't attach the databases.</p>\n<p>Add to our <code class=\"language-text\">Dockerfile</code> the following lines to make the files available in the container:</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">COPY</span> . /\n<span class=\"token keyword\">WORKDIR</span> /</code></pre></div>\n<h2>Microsoft SQL</h2>\n<p>Now we need to set up Microsoft SQL Server. Add to the <code class=\"language-text\">Dockerfile</code> a following line:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">RUN SQLEXPR_x64_ENU.exe /qs /x:setup &amp;&amp; /setup/setup.exe /q /ACTION=Install /INSTANCENAME=SQLEXPRESS /FEATURES=SQLEngine /UPDATEENABLED=0 /SQLSVCACCOUNT=&quot;NT AUTHORITY\\System&quot; /SQLSYSADMINACCOUNTS=&quot;BUILTIN\\ADMINISTRATORS&quot; /TCPENABLED=1 /NPENABLED=0 /IACCEPTSQLSERVERLICENSETERMS &amp;&amp; del /F /Q SQLEXPR_x64_ENU.exe &amp;&amp; rd /q /s setup</code></pre></div>\n<p>Remember, <a href=\"https://go.microsoft.com/fwlink/?linkid=829176\">SQLEXPR<em>x64</em>ENU.exe</a> must be at the root of our folder, like: <code class=\"language-text\">C:\\docker\\SQLEXPR_x64_ENU.exe</code>.</p>\n<p>Next, I run a PowerShell script to enable <code class=\"language-text\">sa</code> account, change the password and attach databases. Add the following line to our Dockerfile:</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">RUN</span> powershell ./sql.ps1 <span class=\"token punctuation\">-</span>Verbose</code></pre></div>\n<p>Here is <code class=\"language-text\">sql.ps1</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># See also:</span>\n<span class=\"token comment\">#   - https://github.com/Microsoft/sql-server-samples/tree/master/samples/manage/windows-containers/mssql-server-2016-express-windows</span>\n\n<span class=\"token function\">Set-StrictMode</span> <span class=\"token operator\">-</span>Version latest <span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">Stop-Service</span> MSSQL`<span class=\"token variable\">$SQLEXPRESS</span> <span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">Set-ItemProperty</span> <span class=\"token operator\">-</span>Path <span class=\"token string\">'HKLM:\\software\\microsoft\\microsoft sql server\\mssql13.SQLEXPRESS\\mssqlserver\\supersocketnetlib\\tcp\\ipall'</span> <span class=\"token operator\">-</span>Name tcpdynamicports <span class=\"token operator\">-</span>Value <span class=\"token string\">''</span> <span class=\"token punctuation\">;</span>\n<span class=\"token function\">Set-ItemProperty</span> <span class=\"token operator\">-</span>Path <span class=\"token string\">'HKLM:\\software\\microsoft\\microsoft sql server\\mssql13.SQLEXPRESS\\mssqlserver\\supersocketnetlib\\tcp\\ipall'</span> <span class=\"token operator\">-</span>Name tcpport <span class=\"token operator\">-</span>Value 1433 <span class=\"token punctuation\">;</span>\n<span class=\"token function\">Set-ItemProperty</span> <span class=\"token operator\">-</span>Path <span class=\"token string\">'HKLM:\\software\\microsoft\\microsoft sql server\\mssql13.SQLEXPRESS\\mssqlserver'</span> <span class=\"token operator\">-</span>Name LoginMode <span class=\"token operator\">-</span>Value 2 <span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">Start-Service</span> MSSQL`<span class=\"token variable\">$SQLEXPRESS</span> <span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">Invoke-Sqlcmd</span> <span class=\"token operator\">-</span>Query <span class=\"token string\">\"ALTER LOGIN sa with password='Str0ng_En0ugh'; ALTER LOGIN sa ENABLE;\"</span> <span class=\"token operator\">-</span>ServerInstance <span class=\"token string\">\".\"</span> <span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">Invoke-Sqlcmd</span> <span class=\"token operator\">-</span>Query <span class=\"token string\">\"CREATE DATABASE Sitecore_Analytics ON (FILENAME = 'C:\\sitecore\\Databases\\Sitecore.Analytics.mdf'), (FILENAME = 'C:\\sitecore\\Databases\\Sitecore.Analytics.ldf') FOR ATTACH ;\"</span> <span class=\"token operator\">-</span>ServerInstance <span class=\"token string\">\".\"</span> <span class=\"token punctuation\">;</span>\n<span class=\"token function\">Invoke-Sqlcmd</span> <span class=\"token operator\">-</span>Query <span class=\"token string\">\"CREATE DATABASE Sitecore_Core      ON (FILENAME = 'C:\\sitecore\\Databases\\Sitecore.Core.mdf'),      (FILENAME = 'C:\\sitecore\\Databases\\Sitecore.Core.ldf')      FOR ATTACH ;\"</span> <span class=\"token operator\">-</span>ServerInstance <span class=\"token string\">\".\"</span> <span class=\"token punctuation\">;</span>\n<span class=\"token function\">Invoke-Sqlcmd</span> <span class=\"token operator\">-</span>Query <span class=\"token string\">\"CREATE DATABASE Sitecore_Master    ON (FILENAME = 'C:\\sitecore\\Databases\\Sitecore.Master.mdf'),    (FILENAME = 'C:\\sitecore\\Databases\\Sitecore.Master.ldf')    FOR ATTACH ;\"</span> <span class=\"token operator\">-</span>ServerInstance <span class=\"token string\">\".\"</span> <span class=\"token punctuation\">;</span>\n<span class=\"token function\">Invoke-Sqlcmd</span> <span class=\"token operator\">-</span>Query <span class=\"token string\">\"CREATE DATABASE Sitecore_Web       ON (FILENAME = 'C:\\sitecore\\Databases\\Sitecore.Web.mdf'),       (FILENAME = 'C:\\sitecore\\\\Databases\\Sitecore.Web.ldf')      FOR ATTACH ;\"</span> <span class=\"token operator\">-</span>ServerInstance <span class=\"token string\">\".\"</span> <span class=\"token punctuation\">;</span></code></pre></div>\n<h2>IIS</h2>\n<p>In the same way as for Microsoft SQL Server, setup IIS:</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">RUN</span> powershell ./iis.ps1 <span class=\"token punctuation\">-</span>Verbose</code></pre></div>\n<p>Here is <code class=\"language-text\">iis.ps1</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># See also:</span>\n<span class=\"token comment\">#   - https://github.com/microsoft/iis-docker/blob/master/windowsservercore/Dockerfile</span>\n<span class=\"token comment\">#   - https://github.com/microsoft/aspnet-docker/blob/master/4.6.2/Dockerfile</span>\n\n<span class=\"token function\">Add-WindowsFeature</span> Web<span class=\"token operator\">-</span>Server\n<span class=\"token function\">Add-WindowsFeature</span> NET<span class=\"token operator\">-</span>Framework<span class=\"token operator\">-</span>45<span class=\"token operator\">-</span>ASPNET\n<span class=\"token function\">Add-WindowsFeature</span> Web<span class=\"token operator\">-</span>Asp<span class=\"token operator\">-</span>Net45\n\nC:\\Windows\\System32\\inetsrv\\appcmd<span class=\"token punctuation\">.</span>exe delete site <span class=\"token string\">\"default web site\"</span>\n\nC:\\Windows\\System32\\inetsrv\\appcmd<span class=\"token punctuation\">.</span>exe add site <span class=\"token operator\">/</span>name:Sitecore <span class=\"token operator\">/</span>bindings:http/<span class=\"token operator\">*</span>:80: <span class=\"token operator\">/</span>physicalPath:c:\\sitecore\\Website\n\nC:\\Windows\\System32\\inetsrv\\appcmd<span class=\"token punctuation\">.</span>exe <span class=\"token function\">start</span> site Sitecore\n\niisreset</code></pre></div>\n<h2>Build</h2>\n<p>Now we have all we need to build an image. Here’s our final <code class=\"language-text\">Dockerfile</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> microsoft/windowsservercore\n\n<span class=\"token keyword\">LABEL</span> Description=<span class=\"token string\">\"Sitecore 8.2 rev. 160729\"</span> Vendor=<span class=\"token string\">\"Sitecore\"</span> Version=<span class=\"token string\">\"8.2 rev. 160729\"</span>\n\n<span class=\"token comment\"># Adding the files</span>\n<span class=\"token keyword\">COPY</span> . /\n<span class=\"token keyword\">WORKDIR</span> /\n\n<span class=\"token comment\"># Installing MS SQL Server</span>\n<span class=\"token keyword\">RUN</span> SQLEXPR_x64_ENU.exe /qs /x<span class=\"token punctuation\">:</span>setup &amp;&amp; /setup/setup.exe /q /ACTION=Install /INSTANCENAME=SQLEXPRESS /FEATURES=SQLEngine /UPDATEENABLED=0 /SQLSVCACCOUNT=<span class=\"token string\">\"NT AUTHORITY\\System\"</span> /SQLSYSADMINACCOUNTS=<span class=\"token string\">\"BUILTIN\\ADMINISTRATORS\"</span> /TCPENABLED=1 /NPENABLED=0 /IACCEPTSQLSERVERLICENSETERMS &amp;&amp; del /F /Q SQLEXPR_x64_ENU.exe &amp;&amp; rd /q /s setup\n\n<span class=\"token comment\"># Setting up MS SQL Server and attaching databases</span>\n<span class=\"token keyword\">RUN</span> powershell ./sql.ps1 <span class=\"token punctuation\">-</span>Verbose\n\n<span class=\"token comment\"># Setting up IIS and adding the website</span>\n<span class=\"token keyword\">RUN</span> powershell ./iis.ps1 <span class=\"token punctuation\">-</span>Verbose\n\n<span class=\"token keyword\">EXPOSE</span> 80</code></pre></div>\n<p>To build an image, let’s create a <code class=\"language-text\">build.bat</code> file in our folder (<code class=\"language-text\">C:\\docker</code>) with following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">docker build -t sitecore %~dp0</code></pre></div>\n<p>Run this file and wait for the build to complete. Then, if we run docker images we shall see the sitecoreimage. Now let's use it!</p>\n<h2>Create a container and run it</h2>\n<p>To create containers from our image run a command like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">docker run --name sitecore -p <span class=\"token number\">80</span>:80 -it sitecore powershell</code></pre></div>\n<p>This will log you into powershell console on your Docker container. Run ping sitecore to find an IP-address of our Sitecore instance:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">Pinging <span class=\"token number\">172.26</span>.102.196 with <span class=\"token number\">32</span> bytes of data</code></pre></div>\n<p>Add to <code class=\"language-text\">C:\\Windows\\System32\\drivers\\etc\\hosts</code> file a following line:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">172.26.102.196 sitecore</code></pre></div>\n<p>Open <a href=\"http://sitecore/\">http://sitecore/</a> in a browser, it should look like this:</p>\n<img src=\"sitecore.png\" class=\"img-fluid\" />\n<p>This is it! In the same way, we can setup Mongo and Solr.</p>","frontmatter":{"title":"Running Sitecore in Docker","date":"October 29, 2016","tags":["sitecore","docker"],"description":null}},"previous":{"fields":{"slug":"/blog/2016/a-first-look-at-category-theory/"},"frontmatter":{"title":"A first look at category theory"}},"next":{"fields":{"slug":"/blog/2016/sql/"},"frontmatter":{"title":"The Structured (English) Query Language"}}},"pageContext":{"id":"f99f5a3b-5594-562f-86f4-5ccc5c6a722d","previousPostId":"dd4b6232-cc63-5955-a173-f8b213c6e2cb","nextPostId":"0e4f4a7b-ed27-54ab-8a74-62bea4cae571"}},"staticQueryHashes":["2841359383"]}