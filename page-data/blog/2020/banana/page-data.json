{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2020/banana/","result":{"data":{"site":{"siteMetadata":{"title":"Roman Klimenko"}},"markdownRemark":{"id":"c74697f7-574d-51a4-bf22-2533bc6a21fb","excerpt":"If you are a software developer, you most probably know Joe's Armstrong quote about object-oriented programming: \"The problem with object-oriented languages isâ€¦","html":"<p>If you are a software developer, you most probably know Joe's Armstrong quote about object-oriented programming:</p>\n<blockquote>\n<p>\"The problem with object-oriented languages is they've got all this implicit environment that they carry around with them. You wanted a banana but what you got were a gorilla holding the banana and the entire jungle.\"</p>\n</blockquote>\n<p>Four years ago, I came across, yet another article where the author used this quote as one of the arguments against OOP. \"<a href=\"https://medium.com/@cscalfani/goodbye-object-oriented-programming-a59cda4c0e53\">Goodbye, Object-Oriented Programming</a>\" - was the title of the article.</p>\n<p>I answered this with a <a href=\"https://medium.com/@romaklimenko/this-is-definitely-a-phrase-of-the-year-71d24b1383ee\">comment</a>:</p>\n<img src=\"medium.png\" class=\"img-fluid\" />\n<p>Despite obvious grammar mistakes, the comment got more than a thousand claps so far.</p>\n<p>It doesn't seem like the author got my point, and since I also can't entirely agree with the author's judgment about OOP, I'd like to explain my opinion about this.</p>\n<p>As a software developer, I often feel the pain of solving the banana-with-gorilla-with-jungle problem. That's true.\nAt the same time, <em>this is our job to implement simple interfaces on top of complicated things</em>. <em>We deal with the complexity to produce simplicity, and this is not a simple task</em>.</p>\n<p>Object-oriented programming gives us great tools: encapsulation, inheritance, and polymorphism. But we have many other useful tools, and we decide which tool to use and when.</p>\n<p>In an example, even in an \"object-oriented\" language, we can care about side-effects and implement pure functions where there is no need for a state. The decision about what to use is our responsibility, and this decision has to be a conscious choice, not just \"I was told there would be benefits.\" Either we choose OOP, FP, or whatever.</p>\n<p>Regarding the gorilla holding a banana in the entire jungle, I am not sure about the banana, but gorillas are complex creatures, and if you really want a gorilla, not an oversimplified gorilla in a vacuum, you may need to put it into the jungle with the air, water, trees, and bananas.</p>\n<p>May <a href=\"https://en.wikipedia.org/wiki/Dependency_injection\">Dependency Injection</a> be with you!</p>","frontmatter":{"title":"A spherical gorilla in a vacuum","date":"March 11, 2020","tags":["oop"],"description":null}},"previous":{"fields":{"slug":"/blog/2020/sitecorosaur/"},"frontmatter":{"title":"Sitecorosaur"}},"next":{"fields":{"slug":"/blog/2020/ski/"},"frontmatter":{"title":"SKI boolean logic"}}},"pageContext":{"id":"c74697f7-574d-51a4-bf22-2533bc6a21fb","previousPostId":"28cf7d0f-5536-5648-8997-8bd7700c974b","nextPostId":"d3eb057c-bf69-5105-ab57-56f1cd16dd91"}},"staticQueryHashes":["2841359383"]}