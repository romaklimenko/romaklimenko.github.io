{"version":3,"sources":["webpack://home/./src/components/tagCloud.js","webpack://home/./src/pages/tags.js"],"names":["TagCloud","StaticQuery","query","render","data","biggestTagCount","Math","max","allMarkdownRemark","group","map","d","totalCount","fontSize","floor","key","fieldValue","Link","to","itemProp","style","paddingRight","whiteSpace","site","siteMetadata","title","location","description"],"mappings":"gKAGe,SAASA,IACtB,OACE,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAULC,OAAQ,SAAAC,GACN,IAAMC,EAAkBC,KAAKC,IAAL,MAAAD,MAAI,OAAQF,EAAKI,kBAAkBC,MAAMC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,gBAI5E,OAAOR,EAAKI,kBAAkBC,MAAMC,KAAI,SAAAC,GACtC,IAAME,EAA4B,IAAjBF,EAAEC,WACjB,GACAN,KAAKQ,MAAMH,EAAEC,WAAaP,EAAf,IANK,IAOlB,OACE,wBAAMU,IAAKJ,EAAEK,YACX,gBAAC,EAAAC,KAAD,CACEC,GAAE,SAAWP,EAAEK,WACfG,SAAS,MACTC,MAAO,CACLC,aAAc,MACdC,WAAY,SACZT,SAAaA,EAAL,MAGTF,EAAEK,YACG,a,oFCKtB,UAjCiB,SAAC,GAAD,QACfZ,KADe,EAEbI,kBAAqBC,MAFR,EAGbc,KACEC,aAAgBC,MAJL,OAQf,gBAAC,IAAD,CAAQC,SAAU,OAAQD,MAAO,QAC/B,gBAAC,IAAD,CAAKA,MAAO,OAAQE,YAAa,SACjC,kCACA,gBAAC,IAAD","file":"component---src-pages-tags-js-1d749dcfd45a61d55fe5.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\n\nexport default function TagCloud() {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          allMarkdownRemark {\n            group(field: frontmatter___tags) {\n              fieldValue\n              totalCount\n            }\n          }\n        }\n      `}\n      render={data => {\n        const biggestTagCount = Math.max(...data.allMarkdownRemark.group.map(d => d.totalCount));\n        const minFontSize = 100;\n        const maxFontSize = 150;\n\n        return data.allMarkdownRemark.group.map(d => {\n          const fontSize = d.totalCount === 1 ?\n            95 :\n            Math.floor(d.totalCount / biggestTagCount * (maxFontSize - minFontSize)) + minFontSize;\n          return (\n            <span key={d.fieldValue}>\n              <Link\n                to={`/tags/${d.fieldValue}`}\n                itemProp=\"url\"\n                style={{\n                  paddingRight: \"5px\",\n                  whiteSpace: \"nowrap\",\n                  fontSize: `${fontSize}%`,\n                }}\n              >\n                {d.fieldValue}\n              </Link>{\" \"}\n            </span>\n          )\n        })\n      }}\n    />\n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport TagCloud from \"../components/tagCloud\"\n\nimport { graphql } from \"gatsby\"\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { group },\n    site: {\n      siteMetadata: { title },\n    },\n  },\n}) => (\n  <Layout location={\"Tags\"} title={\"Tags\"}>\n    <SEO title={\"Tags\"} description={\"Tags\"} />\n    <h3>Tags</h3>\n    <TagCloud></TagCloud>\n  </Layout>\n)\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}